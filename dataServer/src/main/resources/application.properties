#web port
server.port=9004

#mysql
#spring.main.allow-bean-definition-overriding=true
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/firstim?useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=root

mybatis-plus.configuration.log-impl= org.apache.ibatis.logging.stdout.StdOutImpl

#dubbo
#当前服务/应用的名字
dubbo.application.name=dataServer
#注册中心的协议和地址
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
#通信规则（通信协议和接口）
dubbo.protocol.name=dubbo
dubbo.protocol.port=20884
#连接监控中心
#dubbo.monitor.protocol=registry
#开启包扫描，可替代 @EnableDubbo 注解
##dubbo.scan.base-packages=com.zang.gmall

#sharding-jdbc
#数据源
spring.shardingsphere.datasource.names=m1
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://127.0.0.1:3306/firstim?useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root
# 指定msg表的数据分布情况，配置数据节点 m1.msg_1,m1.msg_2
spring.shardingsphere.sharding.tables.msg.actual-data-nodes=m1.msg_$->{1..2}
# 指定msg表的分片策略，分片策略包括分片键(msg_id)和分片算法(msg_$->{msg_id % 2 + 1})
#spring.shardingsphere.sharding.tables.msg.table-strategy.inline.sharding-column=msg_id
#spring.shardingsphere.sharding.tables.msg.table-strategy.inline.algorithm-expression=msg_$->{msg_id % 2 + 1}

spring.shardingsphere.sharding.tables.msg.table-strategy.standard.sharding-column=msg_to
spring.shardingsphere.sharding.tables.msg.table-strategy.standard.precise-algorithm-class-name=com.potxxx.firstim.dataServer.ShardingStringAlgorithm

